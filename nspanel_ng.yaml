external_components:
  - source: ${component_link}
  - source: github://kvj/esphome@nextion_touch_events
    refresh: 30s
    components:
    - nextion

esp32:
  board: esp32dev

ota:
api:
  services:
    - service: update_layout
      variables:
        tags: int[]
      then:
        - lambda: |-
            id(cmp).update_layout(tags);
    - service: update_cells
      variables:
        tag: int[]
        type: string[]
        icon: int[]
        label: string[]
        value: string[]
        unit: string[]
        color: int[]
        bg_color: int[]
      then:
        - lambda: |-
            for (uint8_t i = 0; i < tag.size(); i++) {
              auto content = esphome::nspanel_ng::CellContent {
                type: type[i],
                icon: icon[i],
                label: label[i],
                value: value[i],
                unit: unit[i],
                color: color[i],
                bg_color: bg_color[i],
              };
              id(cmp).update_cell(tag[i], content);
            }

    - service: update_backlight
      variables:
        value: int
        off_value: int
      then:
        - lambda: |-
            id(cmp).update_backlight(value, off_value);
    - service: update_relay
      variables:
        index: int
        state: bool
      then:
        - lambda: |-
            id(cmp).update_relay(index, state);
    - service: send_metadata
      then:
        - lambda: |-
            id(cmp).send_metadata();
    - service: upload_tft
      variables:
        path: string
      then:
        - lambda: |-
            id(cmp).upload_tft(path);
    - service: play_sound
      variables:
        rtttl_content: string
      then:
        - lambda: |-
            id(cmp).play_sound(rtttl_content);
    - service: update_pixels
      variables:
        tag: int
        pixels: int[]
      then:
        - lambda: |-
            id(cmp).update_pixels(tag, pixels);
    - service: update_screensaver
      variables:
        is_on: int
        type: int
      then:
        - lambda: |-
            id(cmp).update_screensaver(is_on != 0, type);

time:
  - platform: homeassistant
    id: homeassistant_time

text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP Address


rtttl:
  id: buzzer
  output: buzzer_out

output:
  - platform: ledc
    id: buzzer_out
    pin:
      number: 21

uart:
  id: tf_uart
  tx_pin: 16
  rx_pin: 17
  baud_rate: 115200

button:
  - platform: restart
    name: "Reboot"

sensor:
  - platform: uptime
    name: "Uptime"
    update_interval: 60s
    icon: mdi:clock-outline

switch:
  - platform: gpio
    id: relay_1
    pin:
      number: 22
    restore_mode: ALWAYS_OFF
  - platform: gpio
    id: relay_2
    pin:
      number: 19
    restore_mode: ALWAYS_OFF
  - platform: gpio
    id: screen_power
    pin:
      number: 4
      inverted: true
    restore_mode: ALWAYS_ON

binary_sensor:
  - platform: gpio
    id: button_1
    pin:
      number: 14
      inverted: true

  - platform: gpio
    id: button_2
    pin:
      number: 27
      inverted: true

display:
  - id: disp
    platform: nextion
    uart_id: tf_uart
    tft_url: "http://example.com" # To enable TFT upload at runtime
    exit_reparse_on_start: true
nspanel_ng:
  id: cmp
  button1: button_1
  relay1: relay_1
  button2: button_2
  relay2: relay_2
  variant: ${variant}
